BSS（Block Started by Symbol）通常是指用来存放程序中未初始化的或者初始化为0的全局变量和静态变量的一块内存区域。特点是:可读写的，在程序执行之前BSS段会自动清0。所以，未初始的全局变量在程序执行之前已经成0了；
存放未初始化的全局变量，将.data和.bss分开的理由是为了节约磁盘空间，.bss不占实际的磁盘空间
当程序加载运行时，就会为.bss段中的数据分配内存已经进行初始化了。
.bss段占据的大小存放在ELF文件格式中的段表(Section Table)中，段表存放了各个段的各种信息，比如段的名字、段的类型、段在elf文件中的偏移、段的大小等信息。
.bss不占据实际的磁盘空间，只在段表中记录大小，在符号表中记录符号。当文件加载运行时，才分配空间以及初始化。

在链接过程中，链接器ld和ld86会使用变量记录下执行程序中每个段的逻辑地址。因此在程序中可以通过访问这几个外部变量来获得程序中段的位置。链接器预定义的外部变量通常至少有etext、_etext、edata、_edata、end和_end。
变量名_etext和etext的地址是程序正文段结束后的第1个地址；_edata和edata的地址是初始化数据区后面的第1个地址；end和end的地址是未初始化数据区（bss）后的第1个地址位置。带下划线’'前缀的名称等同于不带下划线的对应名称，它们之间的唯一区别在于ANSI、POSIX等标准中没有定义符号etext、edata和end。